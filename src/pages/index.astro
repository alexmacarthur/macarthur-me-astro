---
import ButtonLink from "../components/ButtonLink.astro";
import GradientText from "../components/GradientText.astro";
import ListCard from "../components/ListCard.astro";
import SignupForm from "../components/SignupForm.astro";
import DateFormatter from "../components/DateFormatter.astro";
import Layout from "../layouts/Layout.astro";
import contentService, {
  isExternal,
  extractUrlFromBookmark,
  extractHostFromUrl,
} from "../lib/ContentService";
import type { CustomPostsOrPages } from "../types/types";

const featuredBlogPosts = (await Promise.all(
  [
    "options-for-removing-event-listeners",
    "promise-with-resolvers",
    "send-an-http-request-on-page-exit",
  ].map((slug) => contentService.getPost(slug))
)) as CustomPostsOrPages;

const scratchPosts = await contentService.getPosts(1, { tags: ["scratch"]});
---

<Layout title="I'm Alex MacArthur">
  <div class="max-w-5xl mx-auto mb-20 md:mb-24">
    <div class="pt-12 mb-16 md:mb-28">
      <GradientText>
        <h1 class="text-4xl md:text-5xl lg:text-mega font-bold mb-2">
          Bossing around computers in made-up languages.
        </h1>
      </GradientText>

      <span class="block mt-2 text-lg md:text-2xl"
        >Alex MacArthur is a software engineer in Nashville-ish, TN.</span
      >
    </div>

    <ul class="list-none hidden sm:grid sm:grid-cols-3 gap-4 mb-4">
      <li class="flex items-center">
        <h2 class="text-2xl text-gray-600 font-light flex-1">Featured Posts</h2>
      </li>
      <li>
        <h2 class="text-2xl text-gray-600 font-light">Featured Scraps</h2>
      </li>
      <li>
        <h2 class="text-2xl text-gray-600 font-light">Get Updated</h2>
      </li>
    </ul>

    <div class="grid sm:grid-cols-3 gap-4">

      <ul class="grid sm:hidden grid-cols-2 gap-4">

        <li class="flex items-center">
        <h2 class="text-lg text-gray-600 font-light flex-1">Featured Posts</h2>
      </li>
      <li>
        <h2 class="text-lg text-gray-600 font-light">Featured Scraps</h2>
      </li>
      </ul>

    <ul class="list-none sm:col-span-2 grid grid-cols-2 gap-4 featured-blocks">
          {
            featuredBlogPosts.map((post, index) => {
              return (
                <li class={`relative col-start-1 row-start-${index + 1}`}>
                  <ListCard post={post} basePath="/posts"/>

                  {index + 1 === featuredBlogPosts.length && (
                    <div class="absolute -bottom-10">
                      <ButtonLink href="/posts" withArrow={true} classes="text-sm">
                        See All Posts
                      </ButtonLink>
                    </div>
                  )}
                </li>
              );
            })
          }

          {
            scratchPosts.map((post, index) => {
              return (
                <li class={`relative col-start-2 row-start-${index + 1}`}>
                  <ListCard post={post} basePath="/scratch"/>
                  
                  {index + 1 === scratchPosts.length && (
                    <div class="absolute -bottom-10">
                      <ButtonLink href="/scratch" withArrow={true} classes="text-sm">
                        See All Scraps
                      </ButtonLink>
                    </div>
                  )}
                </li>
              );
            })
          }


      </ul>

      <div class="pt-12 sm:pt-0"><SignupForm /></div>
    </div>
  </div>
</Layout>
