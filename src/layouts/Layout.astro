---
import "../styles/global.css";

import Nav from "../components/Nav.astro";
import { DESCRIPTION, MY_NAME, TITLE, TWITTER_HANDLE } from "../lib/constants";
import type { WebSite, WithContext } from "schema-dts";
import { SEO } from "astro-seo";
import Footer from "../components/Footer.astro";
import { getOpenGraphUrl } from "../utils";
import { ClientRouter } from "astro:transitions";
import figtreeNormal from "@fontsource-variable/figtree/files/figtree-latin-wght-normal.woff2?url";
import figtreeItalic from "@fontsource-variable/figtree/files/figtree-latin-wght-italic.woff2?url";
import SearchBox from "../components/SearchBox.astro";

export interface Props {
  title: string;
  ogTitle?: string | null;
  showNav?: boolean;
  description?: string;
  openGraphImage?: string;
  openGraphAlt?: string;
  pageType?: `narrow` | "open" | "wide" | "unhinged";
  subtitle?: string;
  schema?: WithContext<any>;
  canonicalUrl?: string | null;
  shouldIndexForSearch?: boolean;
  postData?: {
    date: string;
    lastUpdated: string;
  };
}

const {
  title,
  showNav = true,
  ogTitle = "",
  description = "",
  pageType = "",
  openGraphImage = "",
  openGraphAlt = "",
  subtitle = "",
  schema,
  postData,
  canonicalUrl,
  shouldIndexForSearch = true,
} = Astro.props;

const mainClass = (() => {
  switch (pageType) {
    case "narrow":
      return "max-w-screen-md";
    case "open":
      return "max-w-screen-lg";
    case "wide":
      return "max-w-[1100px]";
    case "unhinged":
      return "max-w-screen";
    default:
      return "";
  }
})();

const defaultSchema: WithContext<WebSite> = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  url: import.meta.env.SITE_URL,
  name: TITLE,
  alternateName: subtitle,
  description: DESCRIPTION,
  author: {
    "@type": "Person",
    name: MY_NAME,
    url: import.meta.env.SITE_URL,
  },
};

const indexingAttributes = {
  ...(shouldIndexForSearch ? {} : { "data-pagefind-ignore": true }),
};

const image = getOpenGraphUrl({
  path: Astro.url.pathname,
  image: openGraphImage,
  title: ogTitle || title || TITLE,
});
const articleOgData = postData
  ? {
      publishedTime: postData.date,
      modifiedTime: postData.lastUpdated,
      authors: [MY_NAME],
    }
  : {};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="sitemap" type="application/xml" href="/sitemap-index.xml" />
    <link
      rel="sitemap"
      type="application/xml"
      href="https://macarthur.me/sitemap-images.xml"
    />

    <link rel="preload" href={figtreeNormal} as="font" type="font/woff2" />

    <link rel="preload" href={figtreeItalic} as="font" type="font/woff2" />

    <link rel="icon" type="image/svg+xml" href="/favicon/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <script defer data-domain="macarthur.me" src="/js/numbers.js"></script>

    <script
      type="application/ld+json"
      set:html={JSON.stringify(schema || defaultSchema)}
    />

    <SEO
      title={title ? `${title} | Alex MacArthur` : TITLE}
      description={description || DESCRIPTION}
      canonical={canonicalUrl ?? Astro.url.href}
      openGraph={{
        article: articleOgData,
        image: {
          alt: openGraphAlt || "open graph image",
        },
        optional: {
          siteName: "Alex MacArthur",
          description: description || DESCRIPTION,
        },
        basic: {
          title: title || TITLE,
          type: "website",
          image,
          url: Astro.request.url,
        },
      }}
      twitter={{
        creator: TWITTER_HANDLE,
      }}
      extend={{
        link: [
          { rel: "icon", href: "/favicon.ico" },
          {
            rel: "apple-touch-icon",
            sizes: "180x180",
            href: "/favicon/apple-touch-icon.png",
          },
          {
            rel: "icon",
            type: "image/png",
            sizes: "32x32",
            href: "/favicon/favicon-32x32.png",
          },
          {
            rel: "icon",
            type: "image/png",
            sizes: "16x16",
            href: "/favicon/favicon-16x16.png",
          },
          {
            rel: "manifest",
            href: "/favicon/site.webmanifest",
          },
          {
            rel: "alternate",
            type: "application/rss+xml",
            title: "RSS 2.0 Feed",
            href: `${import.meta.env.SITE_URL}/rss/feed.xml`,
          },
        ],
        meta: [
          {
            name: "twitter:image",
            content: image,
          },
          { name: "twitter:title", content: title || TITLE },
          { name: "twitter:description", content: description || DESCRIPTION },
          { name: "twitter:card", content: "summary_large_image" },
          {
            name: "msapplication-TileColor",
            content: "#000000",
          },
          {
            name: "theme-color",
            content: "#000000",
          },
          {
            name: "msapplication-config",
            content: "/favicon/browserconfig.xml",
          },
        ],
      }}
    />
    <ClientRouter />
  </head>
  <body class="bg-white">
    {showNav && <Nav />}

    <div data-pagefind-body>
      <main
        class={`px-4 md:px-6 md:pt-8 mx-auto w-full ${mainClass}`}
        {...indexingAttributes}
      >
        <slot />
      </main>
    </div>

    {showNav && <Footer />}

    <SearchBox />

    <script>
      import "../scripts/link-tracking";
      import "../scripts/search-trigger";
    </script>

    <script defer src="https://unpkg.com/@picperf/client@1.0.1/dist/picperf.js"
    ></script>
  </body>
</html>
