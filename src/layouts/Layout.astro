---
import Nav from "../components/Nav.astro";
import { DESCRIPTION, MY_NAME, TITLE, TWITTER_HANDLE } from "../lib/constants";
import type { WebSite, WithContext } from "schema-dts";
import { SEO } from "astro-seo";
import Footer from "../components/Footer.astro";
import { getOpenGraphUrl } from "../utils";
import { ClientRouter } from 'astro:transitions';
import figtreeNormal from '@fontsource-variable/figtree/files/figtree-latin-wght-normal.woff2?url';
import figtreeItalic from '@fontsource-variable/figtree/files/figtree-latin-wght-italic.woff2?url';
import SearchBox from "../components/SearchBox.astro";

export interface Props {
  title: string;
  ogTitle?: string | null;
  showNav?: boolean;
  description?: string;
  openGraphImage?: string;
  openGraphAlt?: string;
  pageType?: `narrow` | "open" | "wide";
  subtitle?: string;
  schema?: WithContext<any>;
  canonicalUrl?: string | null;
  shouldIndexForSearch?: boolean;
  postData?: {
    date: string;
    lastUpdated: string;
  };
}

const {
  title,
  showNav = true,
  ogTitle = "",
  description = "",
  pageType = "",
  openGraphImage = "",
  openGraphAlt = "",
  subtitle = "",
  schema,
  postData,
  canonicalUrl,
  shouldIndexForSearch = true,
} = Astro.props;

const mainClass = (() => {
  switch (pageType) {
    case "narrow":
      return "max-w-screen-md";
    case "open":
      return "max-w-screen-lg";
    case "wide":
      return "max-w-[1100px]";
    default:
      return "";
  }
})();

const defaultSchema: WithContext<WebSite> = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  url: import.meta.env.SITE_URL,
  name: TITLE,
  alternateName: subtitle,
  description: DESCRIPTION,
  author: {
    "@type": "Person",
    name: MY_NAME,
    url: import.meta.env.SITE_URL,
  },
};

const indexingAttributes = {
  ...(shouldIndexForSearch ? {} : { 'data-pagefind-ignore': true }),
};

const image = getOpenGraphUrl({
  path: Astro.url.pathname,
  image: openGraphImage,
  title: ogTitle || title || TITLE,
});
const articleOgData = postData
  ? {
      publishedTime: postData.date,
      modifiedTime: postData.lastUpdated,
      authors: [MY_NAME],
    }
  : {};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="sitemap" type="application/xml" href="/sitemap-index.xml" />
    <link
      rel="sitemap"
      type="application/xml"
      href="https://macarthur.me/sitemap-images.xml"
    />

    <link
      rel="preload"
      href={figtreeNormal}
      as="font"
      type="font/woff2"
    />

    <link
      rel="preload"
      href={figtreeItalic}
      as="font"
      type="font/woff2"
    />

    <link rel="icon" type="image/svg+xml" href="/favicon/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <script defer data-domain="macarthur.me" src="/js/numbers.js"></script>

    <script
      type="application/ld+json"
      set:html={JSON.stringify(schema || defaultSchema)}
    />

    <SEO
      title={title ? `${title} | Alex MacArthur` : TITLE}
      description={description || DESCRIPTION}
      canonical={canonicalUrl ?? Astro.url.href}
      openGraph={{
        article: articleOgData,
        image: {
          alt: openGraphAlt || "open graph image",
        },
        optional: {
          siteName: "Alex MacArthur",
          description: description || DESCRIPTION,
        },
        basic: {
          title: title || TITLE,
          type: "website",
          image,
          url: Astro.request.url,
        },
      }}
      twitter={{
        creator: TWITTER_HANDLE,
      }}
      extend={{
        link: [
          { rel: "icon", href: "/favicon.ico" },
          {
            rel: "apple-touch-icon",
            sizes: "180x180",
            href: "/favicon/apple-touch-icon.png",
          },
          {
            rel: "icon",
            type: "image/png",
            sizes: "32x32",
            href: "/favicon/favicon-32x32.png",
          },
          {
            rel: "icon",
            type: "image/png",
            sizes: "16x16",
            href: "/favicon/favicon-16x16.png",
          },
          {
            rel: "manifest",
            href: "/favicon/site.webmanifest",
          },
          {
            rel: "alternate",
            type: "application/rss+xml",
            title: "RSS 2.0 Feed",
            href: `${import.meta.env.SITE_URL}/rss/feed.xml`,
          },
        ],
        meta: [
          {
            name: "twitter:image",
            content: image,
          },
          { name: "twitter:title", content: title || TITLE },
          { name: "twitter:description", content: description || DESCRIPTION },
          { name: "twitter:card", content: "summary_large_image" },
          {
            name: "msapplication-TileColor",
            content: "#000000",
          },
          {
            name: "theme-color",
            content: "#000000",
          },
          {
            name: "msapplication-config",
            content: "/favicon/browserconfig.xml",
          },
        ],
      }}
    />
    <ClientRouter />
  </head>
  <body>
    { showNav && <Nav /> }
    
    <div data-pagefind-body>
      <main class={`px-4 md:px-6 mx-auto w-full ${mainClass}`} {...indexingAttributes} >
        <slot />
      </main>
    </div>

    { showNav && <Footer /> }

    <SearchBox />

    <script>
      import "../scripts/link-tracking";
      import "../scripts/search-trigger";
    </script>

    <style is:global>
      @import "prismjs/themes/prism-okaidia.css";

      @font-face {
        font-family: 'Figtree Variable';
        font-style: normal;
        font-display: swap;
        font-weight: 300 900;
        src: url(@fontsource-variable/figtree/files/figtree-latin-wght-normal.woff2) format('woff2-variations');
        unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;
      }

      @font-face {
        font-family: 'Figtree Variable';
        font-style: italic;
        font-display: swap;
        font-weight: 300 900;
        src: url(@fontsource-variable/figtree/files/figtree-latin-wght-italic.woff2) format('woff2-variations');
        unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;
      }

      body {
          font-family: 'Figtree Variable', sans-serif;
      }

      /** custom utilities */

      @layer {
        .slanted-text {
          font-style: oblique 4deg;
        }

        .fancy-link {
          @apply relative no-underline;
          background: linear-gradient(
            to right,
            theme("colors.purple.600") 50%,
            theme("colors.purple.700") 50%
          );
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
        }

        .fancy-link-on-hover:hover {
          @apply relative no-underline;
          background: linear-gradient(
            to right,
            theme("colors.purple.600") 50%,
            theme("colors.purple.700") 50%
          );
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
        }
      }

      /** global typography adjustments */

      .italic,
      em,
      i {
        font-style: italic;
      }

      blockquote {
        font-style: italic !important;
        @apply leading-relaxed text-gray-800 !important;

        * {
          @apply text-gray-800 !important;
        }
      }

      * {
        letter-spacing: -0.025em;
      }

      h2 em {
        font-weight: inherit;
        color: inherit;
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        @apply text-gray-700 font-medium;
      }

      :not(h1, h2, h3, h4, h5, h6, pre, pre *, svg *) {
        @apply text-gray-700 font-light;
      }

      /** end global typography adjustments */

      nav {
        grid-area: nav;
      }

      main {
        grid-area: main;
      }

      form input,
      form textarea {
        @apply border border-gray-300 rounded-sm w-full px-2 py-2 text-base;
      }

      label {
        @apply mb-2 inline-block;
      }

      .password-wrapper {
        position: absolute;
        z-index: -1;
        opacity: 0;
      }

      .jc-CommentList-count * {
        @apply font-normal !important;
      }

      .button,
      .jc-CommentBox-button {
        --mm-box-shadow-color: theme('colors.purple.500');

        transition: all 0.1s ease;
        transform: translateX(-2px);
        box-shadow: 4px 4px 0px var(--mm-box-shadow-color);
        @apply border-2 border-purple-500 text-purple-500 rounded-sm px-4 py-1 rounded-md;

        &:hover {
          cursor: pointer;
          transform: translate(2px, 2px);
          box-shadow: 2px 2px 0px var(--mm-box-shadow-color);
        }

        &:active {
          transform: translate(4px, 4px);
          box-shadow: 0px 0px 0px var(--mm-box-shadow-color);
        }
      }

      .jc-CommentBox-preview code[class^="language-"] {
        padding: 3px 6px;
        display: block;
      }

      .button.light {
        --mm-box-shadow-color: white;
        @apply bg-transparent border-white text-white rounded-md !important;
      }

      .button.submit {
        @apply rounded-sm;
      }

      .button.large {
        @apply text-2xl;
      }

      .button svg {
        stroke: white;
      }

      .card {
        @apply border-2 border-gray-200 rounded-lg p-6 md:p-8;
      }

      *:focus-visible {
        outline: theme("colors.purple.500") auto 1px;
      }

      .prose {
        :not(h1, h2, h3, h4, h5, h6) > a {
          @apply fancy-link;
        }

        :not(h1, h2, h3, h4, h5, h6) > a:after {
          content: "";
          left: 0;
          bottom: 0;
          width: 100%;
          height: 0;
          display: block;
          position: absolute;
          background: theme("colors.purple.500");
          transform: translateY(100%) skew(-5deg);
          transition: all 0.08s ease-out;
          @apply bg-gradient-to-r from-purple-500 to-purple-600;
        }

        :not(h1, h2, h3, h4, h5, h6) > a:hover:after {
          height: 0.2em;
        }
      }

      .pagefind-ui__button {
        @apply border-2 border-purple-500 rounded-sm px-4 py-1 text-lg hover:text-white hover:bg-purple-500 bg-white text-purple-500 transition-colors duration-200 cursor-pointer font-normal h-auto !important;
      }

      .pagefind-ui__result-title a {
        @apply font-semibold !important;
      }

      .pagefind-ui__result-excerpt {
        @apply font-light text-sm !important;
      }

      .shadow-box {
        @apply border-2 p-5 md:p-6 rounded-md;
        transition: all 0.1s ease;
        box-shadow: 5px 5px 0px theme('colors.gray.200');

        &.hoverable-shadow-box {
          
                  &:hover {
                    cursor: pointer;
                    transform: translate(2px, 2px);
                    box-shadow: 2px 2px 0px var(--mm-box-shadow-color);
                  }
        }

        &.purple-shadow-box {
          @apply border-purple-600;
          box-shadow: 5px 5px 0px theme('colors.purple.300');
        }
      }
    </style>
  </body>
</html>
