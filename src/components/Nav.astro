---
import Logo from "./Logo.astro";
import MenuToggle from "./MenuToggle.astro";

const navItems = [
  {
    name: "Posts",
    href: "/posts",
  },
  {
    name: "Products",
    href: "/projects",
  },
  {
    name: "Newsletter",
    href: "/newsletter",
  },
  {
    name: "Dashboard",
    href: "/dashboard",
  },
  {
    name: "About",
    href: "/about",
  },
  {
    name: "Contact",
    href: "/contact",
  },
];
---

<nav
  class="p-6 px-5 lg:px-10 mb-3 flex justify-between items-center min-h-[105px]">
  <a href="/">
    <Logo hoverable />
  </a>

  <ul class="gap-6 items-center hidden md:flex">
    {
      navItems.map((item) => (
        <li class="">
          <a
            href={item.href}
            class="text-gray-600 font-light fancy-link-on-hover">
            {item.name}
          </a>
        </li>
      ))
    }
  </ul>

  <input
    id="menuToggle"
    type="checkbox"
    tabindex="-1"
    class="absolute opacity-0 md:hidden -z-10"
  />

  <div
    class="md:hidden flex items-center opacity-0 w-full h-screen bg-gray-700 z-40 fixed top-0 left-0 -translate-x-full px-8"
    id="mobileNav">
    <ul class="gap-3 flex flex-col">
      {
        navItems.map((item) => (
          <li class="">
            <a
              href={item.href}
              class="text-white text-5xl font-bold slanted-text">
              {item.name}
            </a>
          </li>
        ))
      }
      <li class="">
        <a
          href={"#"}
          id="navSearchTrigger"
          class="text-white text-5xl font-bold slanted-text">
          Search
        </a>
      </li>
    </ul>
  </div>

  <label
    class="cursor-pointer z-50 md:hidden absolute top-[2.15rem] right-0 mr-6"
    for="menuToggle"
    aria-label="Toggle Menu"
    id="menuToggleLabel">
    <MenuToggle />
  </label>
</nav>

<style is:global>
  #mobileNav {
    transition:
      transform 0.15s ease-in-out,
      opacity 0.1s ease-in-out 0.05s;
  }
  #menuToggle:checked ~ #mobileNav {
    @apply opacity-100 translate-x-0;
  }

  #menuToggle:checked ~ #menuToggleLabel li {
    @apply bg-white;
  }

  #menuToggle:checked ~ #menuToggleLabel {
    @apply fixed;
  }

  #menuToggle:checked ~ #menuToggleLabel .menu-bar-1 {
    transform: translate3d(0, 1rem, 0) rotate(-45deg);
  }

  #menuToggle:checked ~ #menuToggleLabel .menu-bar-2 {
    @apply opacity-0;
  }

  #menuToggle:checked ~ #menuToggleLabel .menu-bar-3 {
    transform: translate3d(0, -1rem, 0) rotate(45deg);
  }
</style>

<script>
  import { handleTrigger } from "../scripts/search-trigger";

  const navSearchTrigger = document.getElementById('navSearchTrigger') as HTMLElement;
  const menuToggle = document.getElementById('menuToggle') as HTMLInputElement;

  navSearchTrigger.addEventListener('click', (event) => {
    event.preventDefault();

    menuToggle.checked = false;

    handleTrigger();
  });
</script>
