---
export interface Props {
  classes?: string;
  value?: string;
  disableAnimation?: boolean;
}

const { classes = "", value = "0", disableAnimation  } = Astro.props;
const formattedValue = value.replace(/\,/g, "");
---

<span
  class={classes}
  data-counter-value={formattedValue}
  data-counter-disabled={disableAnimation}
>
  {disableAnimation ? value : "-"}
</span>

<script>
  import { CountUp } from "countup.js";

  const counters = document.querySelectorAll("[data-counter-value]");

  counters.forEach((counter) => {
    
    const counterEl = counter as HTMLElement;

    if (counterEl.dataset.counterDisabled === "true") return;

    const countUp = new CountUp(
      counterEl,
      parseInt(counterEl.dataset.counterValue as string, 10)
    );

    const observer = new IntersectionObserver(
      (entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            countUp.start();
            observer.unobserve(counterEl);
          }
        });
      },
      {
        rootMargin: "0px",
        threshold: 1.0,
      }
    );

    observer.observe(counter);
  });
</script>
