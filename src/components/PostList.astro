---
import DateFormatter from "./DateFormatter.astro";
import ViewCount from "./ViewCount.astro";
import ButtonLink from "./ButtonLink.astro";
import type { GhostPost } from "../types/types";
import { generateExcerpt } from "../lib/ContentService";

interface Props {
  posts: GhostPost[];
}

const { posts } = Astro.props;
---

<ul class="space-y-10">
  {
    posts.map((post) => {
      const description = post.custom_excerpt || generateExcerpt(post.html);
      const postPath = post.externalUrl || `/posts/${post.slug}`;
      const target = post.externalUrl ? "_blank" : "_self";

      return (
        <li>
          <article>
            <h2 class="text-2xl font-bold">
              <a href={postPath} target={target}>
                {post.title}
              </a>
            </h2>

            <div class="flex items-center mb-3 gap-3 text-base">
              {post.updated_at && (
                <>
                  <DateFormatter
                    date={post.updated_at}
                    className="inline-block"
                  >
                    Updated on
                  </DateFormatter>

                  <small>/</small>
                </>
              )}

              <DateFormatter date={post.published_at} className="inline-block">
                {post.updated_at && "Originally posted on"}
              </DateFormatter>

              {!post.externalUrl && (
                <ViewCount
                  value={""}
                  slug={post.slug}
                  disableAnimation={true}
                />
              )}
            </div>

            <p class="block text-gray-500 mb-2">{description}</p>

            <ButtonLink href={postPath} target={target} withArrow={true}>
              Read It
            </ButtonLink>
          </article>
        </li>
      );
    })
  }
</ul>
