---

const { isHorizontal = false, disableButtonHover = false } = Astro.props;

const buttonHoverClass = disableButtonHover ? "button-no-hover" : "";
---

<div class="flex flex-col justify-center flex-auto md:col-span-2">
<form data-signup-form class={`${isHorizontal ? "is-horizontal" : ""}`}>
    <div class="mb-4">
    <input
        class="border-none"
        type="email"
        name="email"
        placeholder="Email"
        required
    />
    </div>
    <div>
    <input
        type="submit"
        value="Subscribe"
        class=`button ${buttonHoverClass} submit bg-none light disabled:pointer-events-none disabled:opacity-50`
        autocomplete="off"
    />
    </div>
</form>

<p
    class="text-white px-1 py-2 text-center border-white hidden is-error"
    data-signup-message>
</p>
</div>

<style>
  .is-error {
    @apply bg-pink-600 border-2 border-white mt-3;
  }
</style>

<script>
  import { sendEvent } from "../utils";

  async function handleSubmission(e) {
    e.preventDefault();
    const form = e.target;
    const resultMessage = form.parentElement!.querySelector(
    "[data-signup-message]"
  ) as HTMLParagraphElement;
    const button = form.querySelector(
    'input[type="submit"]'
  ) as HTMLInputElement;

    button.disabled = true;

    // Reset classes in case this is a second submission on the same page load.
    resultMessage.classList.add("is-error", "hidden");
    const email = (
      form.querySelector('input[name="email"]') as HTMLInputElement
    ).value as string;
    const path = window.location.pathname;

    // @ts-ignore
    fetch(`${import.meta.env.PUBLIC_MACARTHUR_API_BASE_URL}/sign-up`, {
      keepalive: true,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ email, path }),
    });

    resultMessage.classList.remove("hidden");

    form.reset();
    resultMessage.classList.remove("is-error");
    resultMessage.innerText = "You're in. Thanks! ðŸŽ‰";
    form.remove();
    sendEvent("email_signup", { path });
  }

  const forms = document.querySelectorAll<HTMLFormElement>("[data-signup-form]");

  document.addEventListener('astro:before-preparation', () => {
    forms.forEach((form) => {
      form.removeEventListener("submit", handleSubmission);
    });
  });

  document.addEventListener('astro:page-load', () => {
    forms.forEach((form) => {
      form.addEventListener("submit", handleSubmission);
    });
  });
</script>

