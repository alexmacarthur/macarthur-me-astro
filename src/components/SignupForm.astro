---
export interface Props {
  isHorizontal?: boolean;
}

const { isHorizontal = false } = Astro.props;
---

<div
  class={`bg-gradient-to-br from-[#8d44d3] to-[#933ce3] p-6 rounded-md w-full ${
    isHorizontal ? "grid md:grid-cols-5 gap-10 py-11" : ""
  }`}
>
  <div class="mb-5 md:col-span-3">
    <p class="text-white mb-3 font-semibold">
      Get an email whenever I publish a new post or project.
    </p>
    <span class="text-purple-200 leading-snug block">
      I won't send you spam. Unsubscribe whenever.
    </span>
  </div>

  <div class="flex flex-col justify-center flex-auto md:col-span-2">
    <form id="signUpForm" class={`${isHorizontal ? "is-horizontal" : ""}`}>
      <div class="mb-4">
        <input
          class="border-none"
          type="email"
          name="email"
          placeholder="Email"
          required
        />
      </div>
      <div>
        <input
          type="submit"
          value="Subscribe"
          class="button naked submit bg-none light disabled:pointer-events-none disabled:opacity-50"
          autocomplete="off"
        />
      </div>
    </form>

    <p
      class="text-white px-1 py-2 text-center border-white hidden is-error"
      id="resultMessage"
    >
    </p>
  </div>
</div>

<style>
  .is-error {
    @apply bg-pink-600 border-2 border-white mt-3;
  }
</style>

<script>
  import { sendEvent } from "../utils.ts";

  const form = document.getElementById("signUpForm") as HTMLFormElement;
  const resultMessage = document.getElementById(
    "resultMessage"
  ) as HTMLParagraphElement;
  const button = form.querySelector('input[type="submit"]') as HTMLInputElement;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    button.disabled = true;

    // Reset classes in case this is a second submission on the same page load.
    resultMessage.classList.add("is-error", "hidden");
    const email = (
      form.querySelector('input[name="email"]') as HTMLInputElement
    ).value as string;
    const response = await fetch(
      `${import.meta.env.PUBLIC_MACARTHUR_API_BASE_URL}/sign-up`,
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email }),
      }
    );

    resultMessage.classList.remove("hidden");

    if (!response.ok) {
      if (response.status === 409) {
        resultMessage.innerText = "Looks like you're already subscribed!";
      } else {
        resultMessage.innerText = "Oh no! Something went wrong.";
      }

      button.disabled = false;
      return;
    }

    form.reset();
    resultMessage.classList.remove("is-error");
    resultMessage.innerText = "You're in. Thanks! ðŸŽ‰";
    form.remove();
    sendEvent("email_signup");
  });
</script>
